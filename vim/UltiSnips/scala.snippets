snippet desc "" b
describe("$1") {
  $2
}
endsnippet

snippet it "" b
it("$1") {
  $2
}
endsnippet

snippet specfile "" b
package ${1:com.yourcompany.whatever} 

import org.scalatest._

class ${2:Class}Spec extends FunSpec {
}
endsnippet

snippet pppr "Description" b
println()
println($1)
println()
endsnippet

snippet ass "assert" b
assert(${1:false})
endsnippet

snippet cclass "case class" b
case class ${1:WhatEver}
endsnippet

snippet flatspec "flat spec" b
import org.scalatest._

class ${2:Class}Spec extends FlatSpec with Matchers {
}
endsnippet

snippet apduspec "Zaphod's ApduSpec" b
import com.fidesmo.apdu._

class ${2:Class}Spec extends ApduSpec {
}
endsnippet

snippet for "" b
for {
  $2 <- $1
} yield $3
endsnippet
